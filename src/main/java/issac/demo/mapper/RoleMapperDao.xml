<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="issac.demo.mapper.RoleMapperDao" >
  <resultMap id="BaseResultMap" type="issac.demo.model.RoleBean" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name
  </sql>
  
   <select id="getModuleListByParams" resultMap="BaseResultMap"  parameterType="java.util.Map">
    select 
    <include refid="Base_Column_List" />
    from `role`
    where 1=1
  </select>
  
   <insert id="insertSelective"  parameterType="java.util.Map" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"  parameterType="java.util.Map" >
    update role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  
  <select id="getRoleResourcePageList"  parameterType="java.lang.Integer" resultType="issac.demo.model.RoleResourceBean">
		  SELECT
			t1.menuId,
			t1.menuPid,
			t1.menuName,
			t1.orderNo,
			t1.resourceId,
			t1.resourceName,
			t2.roleId,
			t2.roleName,
			t2.resourceId rsId
		FROM
			(
				SELECT
					m.id menuId,
					m.pid menuPid,
					m.text menuName,
					m.orderNo,
					rs.id resourceId,
					rs.`name` resourceName,
					rs.action
				FROM
					menu m,
					resource rs
				WHERE
					m.id = rs.menuId
			) t1
		LEFT JOIN (
			SELECT
				ro.id roleId,
				ro.`name` roleName,
				ror.resourceId
			FROM
				role ro,role_resource ror
            WHERE ro.id=ror.roleId
		) t2 ON t1.resourceId = t2.resourceId
		AND t2.roleId =  #{roleId,jdbcType=INTEGER}
        ORDER BY
        	t1.menuPid,
	       t1.orderNo,
           t1.resourceId
  </select>
    
    <insert id="insert" parameterType="issac.demo.model.RoleBean" useGeneratedKeys="true"  keyProperty="id">
		    insert into role (name)
		    values ( #{name,jdbcType=VARCHAR} )
      </insert>
      
  <select id="getRoleBeanByName" resultMap="BaseResultMap"  parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
       from `role`
       where name=#{name,jdbcType=VARCHAR}
  </select>
  
<delete id="deleteAll" parameterType="java.util.List" >
       delete from role  where id  in
      <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
           #{item,jdbcType=INTEGER}
      </foreach>
 </delete>

<select id="findUserRoleByRoleIds" resultType="issac.demo.model.UserRoleBean"  parameterType="java.util.List">
          SELECT * FROM `user_role` where roleId  in
            <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
           #{item,jdbcType=INTEGER}
      </foreach>
  </select>
  
  <select id="findUserRoleByUserId" resultType="issac.demo.model.UserRoleBean"  parameterType="java.lang.Integer">
          SELECT * FROM `user_role` where userId =    #{userId,jdbcType=INTEGER}
  </select>
  
    <select id="getRootRoleList" resultType="issac.demo.model.RoleBean"  >
          SELECT * FROM `role` 
  </select>
  
      <select id="findRoleResourceByRoleId" resultType="issac.demo.model.RoleResourceBean"   parameterType="java.util.List">
          SELECT ror.*,ro.`name` roleName FROM `role_resource` ror,role ro WHERE ror.roleId=ro.id  and  roleId in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
           #{item,jdbcType=INTEGER}
      </foreach>
  </select>
  
        <select id="getRootRoleResourceList" resultType="issac.demo.model.RoleResourceBean"   parameterType="java.lang.Integer">
          SELECT ror.*,ro.`name` roleName FROM `role_resource` ror,role ro WHERE ror.roleId=ro.id  
     </select>
     
    <select id="getRoleResourceByUserId" resultType="issac.demo.model.RoleResourceBean"   parameterType="java.lang.Integer">
		          SELECT
						ror.*,
					  ro.`name` roleName
					FROM
						role_resource ror,
						role ro,
						user_role uro,
						`user` u
					WHERE
						ror.roleId = ro.id
					AND ro.id = uro.roleId
					AND uro.userId = u.id
					AND u.id=  #{userId,jdbcType=INTEGER}
					ORDER BY u.id 
     </select>
     
    <insert id="insertBatchUserRole" parameterType="java.util.List">  
       insert into `user_role`  (userId, roleId)    values  
    <foreach collection="list" item="item" separator=","   >  
          (#{item.userId,jdbcType=INTEGER}, #{item.roleId,jdbcType=INTEGER})
    </foreach>  
</insert>  
  
<delete id="deleteUserRoleByUserId" parameterType="java.lang.Integer" >
       delete from `user_role`  where userId  = #{userId,jdbcType=INTEGER}
 </delete>

<delete id="deleteUserRoleByUserIds" parameterType="java.util.List">
       delete from `user_role`  where userId  in 
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
           #{item,jdbcType=INTEGER}
      </foreach>
 </delete>
  
</mapper>